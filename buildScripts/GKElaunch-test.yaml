# create a persistent disk using command:
# gcloud compute --project=PROJECT disks create redis-disk --zone=australia-southeast1-b --type=pd-ssd --size=1GB

apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - port: 6379
      name: "6379"
      targetPort: 6379
  selector:
    app: redis
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis  # has to match .spec.template.metadata.labels
  serviceName: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis  # has to match .spec.selector.matchLabels
    spec:
      containers:
        - name: redis
          image: gcr.io/newagent-e5dac/consensuscircle-test-redis:latest
          args: ["--appendonly", "yes", "--save", "900", "1", "--save", "30", "2"]
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-volume
              mountPath: /data
      volumes:
        - name: redis-volume
          gcePersistentDisk:
            pdName: redis-disk
            fsType: ext4
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yml convert
    kompose.version: 1.1.0 (36652f6)
  creationTimestamp: null
  labels:
    app : rq-worker
  name: rq-worker
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app : rq-worker
    spec:
      containers:
      - env:
        - name: REDIS_URL
          value: redis://redis:6379/1
        image: gcr.io/newagent-e5dac/consensuscircle-test-worker:latest
        name: rq-worker
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: rq-worker
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
   app : rq-worker
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yml convert
    kompose.version: 1.1.0 (36652f6)
  creationTimestamp: null
  labels:
    app : api
  name: api
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app : api
    spec:
      containers:
      - env:
        - name: REDIS_URL
          value: redis://redis:6379/1
        image: gcr.io/newagent-e5dac/consensuscircle-test-api:latest
        name: api
        ports:
          - containerPort: 5000
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: api
  clusterIP: 10.47.240.20
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yml convert
    kompose.version: 1.1.0 (36652f6)
  creationTimestamp: null
  labels:
    app : client
  name: client
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app : client
    spec:
      containers:
      - env:
        - name: REDIS_URL
          value: redis://redis:6379/1
        image: gcr.io/newagent-e5dac/consensuscircle-test-client:latest
        name: client
        ports:
        - containerPort: 3000
        resources: {}
      restartPolicy: Always
status: {}
---
  apiVersion: v1
  kind: Service
  metadata:
    name: client
  spec:
    ports:
      - port: 3000
        targetPort: 3000
        name: client-port
      - port: 5000
        targetPort: 5000
        name: api-port
    selector:
      app: client
    type: LoadBalancer
