{
	"info": {
		"_postman_id": "7652af90-ed7a-46c9-9463-3e8635ec0298",
		"name": "AgentSimulations",
		"description": "Testing for the agents simulations with multiple agents running \n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Converge",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/converge",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"converge"
					]
				},
				"description": "Converge the blockchain (issue only to 1 agent and it will cascade convergence)"
			},
			"response": []
		},
		{
			"name": "Instruction",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"instructionHash\": \"4595553afdb2382f76ac813a15896228332589b7b3f622b5a36301def5b003d5\",\r\n  \"sign\": \"bmTE7fC9cLjXroGZzt7WzjEaqZXdKCuQkb9E8JuO98AbBNxucRTyd3DnlFKhVpyynhO/mm9LzL/76jNlBCFqdg==\",\r\n  \"instruction\": {\r\n    \"source\": \"5ad77a2a5b591824805a5d3dac653f5a54af47ca6b8161883c1c17972b90938c\",\r\n    \"mostRecentBlockHeight\": 1,\r\n    \"slots\": [\r\n      {\r\n        \"wallet\": \"Default\",\r\n        \"payment\": 200000000,\r\n        \"action\": [\"MinerFee\", \"pay\"],\r\n        \"timeout\": 0\r\n      },\r\n      {\r\n        \"wallet\": \"Default\",\r\n        \"payment\": 0,\r\n        \"target\": \"5ad77a2a5b591824805a5d3dac653f5a54af47ca6b8161883c1c17972b90938c\",\r\n        \"script\": [\"Identity.Citizenship.Type\",\"South African\", \"claim\", \"update\"],\r\n        \"timeout\": 0\r\n      },\r\n      {\r\n        \"wallet\": \"Default\",\r\n        \"payment\": 500000000,\r\n        \"target\": \"a2e7623c29717a60913a2b36da830ab48da146eabd2453a0f0756630c25f5100\",\r\n        \"script\": [\"Identity.Citizenship.Type\",\"South African\", \"verify\", \"instructionHandler\"],\r\n        \"timeout\": 0\r\n      }\r\n    ]\r\n  }\r\n} "
				},
				"url": {
					"raw": "localhost:5000/instruction",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"instruction"
					]
				},
				"description": "Add an instruction to the unprocessed instructions pool"
			},
			"response": []
		},
		{
			"name": "Register",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"agents\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/agents/register",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"agents",
						"register"
					]
				},
				"description": "Register an agent with another agent (see it as a pair it will poll for instructions and for convergence)"
			},
			"response": []
		},
		{
			"name": "Instructions",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/instructions",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"instructions"
					]
				},
				"description": "Get the current list of instructions from a node"
			},
			"response": []
		},
		{
			"name": "Vote",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/vote",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"vote"
					]
				},
				"description": "get the Vote from this node.  This will be denied if the node has not yet got to converged state or is still waiting on getting to converged state (i.e. to get the encrypted votes from others)"
			},
			"response": []
		},
		{
			"name": "HashedVote",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/hashedVote",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"hashedVote"
					]
				},
				"description": "get the HashedVote from this Agent.  Will always supply it while in circle (and deny if not in circle)"
			},
			"response": []
		},
		{
			"name": "Entity",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/entity",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"entity"
					]
				},
				"description": "Returns the agent identifier (normally public key but for simulation a unique key)"
			},
			"response": []
		},
		{
			"name": "convergeEntity",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/convergeUIDs",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"convergeUIDs"
					]
				},
				"description": "Returns the agent identifier (normally public key but for simulation a unique key)"
			},
			"response": []
		},
		{
			"name": "setPKey",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"pkey\":\"9c8345cf13413cd0ff0e6af4f33cce4f0555fb3a50364b64265b05ce134af28d\"\n}"
				},
				"url": {
					"raw": "localhost:5000/setPKey",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"setPKey"
					]
				},
				"description": "Set the public Key of the agent"
			},
			"response": []
		},
		{
			"name": "PKey",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/PKey",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"PKey"
					]
				},
				"description": "get the Public Key of this agent"
			},
			"response": []
		},
		{
			"name": "block",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/block",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"block"
					]
				},
				"description": "Returns the block height and block hash of the highest block the agent is aware of"
			},
			"response": []
		},
		{
			"name": "ownerPublicKey",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/ownerPublicKey",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"ownerPublicKey"
					]
				},
				"description": "get the Public Key of the owner of this agent (the entity that owns the agent)"
			},
			"response": []
		},
		{
			"name": "ownerLevel",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/ownerLevel",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"ownerLevel"
					]
				},
				"description": "get the level of the owner of this agent"
			},
			"response": []
		},
		{
			"name": "genesisBlock",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/genesisBlock",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"genesisBlock"
					]
				},
				"description": "Returns the genesisBlock hash the agent is using"
			},
			"response": []
		},
		{
			"name": "blockPublished",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5000/blockPublished?blockID=AS",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"blockPublished"
					],
					"query": [
						{
							"key": "blockID",
							"value": "AS"
						}
					]
				},
				"description": "New block has been published - read and process"
			},
			"response": []
		},
		{
			"name": "signHash",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"agentPKey\":\"5cbda1c61193fbd4644eeca3d9d5d6572ab8ac3399dcdcfa7241dcab509d2102\",\n   \"agentSign\":\"ZfmXvfCs3RlZjp+NvzJmUPK59vwBT/3GrW5hR8ChFRXW94jwnDPDucm0lp+9HVO7LKMFx6KFPBhKV37P8mL3IQ==\",\n   \"blockHash\":\"72e055253cf8c78d8fc582b4f2e43ec001c564cbdfb3c361c5d0e2adfbebbffd\",\n   \"blockHeight\":1\n  }"
				},
				"url": {
					"raw": "localhost:5000/signHash",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"signHash"
					]
				},
				"description": "Called as part of the setup of the next consensus circle (assuming the calling node is in the circle)"
			},
			"response": []
		},
		{
			"name": "ConvergeInstructions",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nodes\":[\"http://localhost:5001\"]\n}"
				},
				"url": {
					"raw": "localhost:5005/convergeInstructions",
					"host": [
						"localhost"
					],
					"port": "5005",
					"path": [
						"convergeInstructions"
					]
				},
				"description": "Converge the instructions in the blockchain"
			},
			"response": []
		}
	]
}